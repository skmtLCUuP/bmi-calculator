name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build wheel

    - name: Run tests
      run: |
        pip install pytest pytest-cov
        pytest tests/ -v

    - name: Build package
      run: |
        python -m build

    - name: Generate release notes
      id: generate_notes
      run: |
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
        echo "## ðŸš€ Release ${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### ðŸ“¦ Installation" >> $GITHUB_OUTPUT
        echo "\`\`\`bash" >> $GITHUB_OUTPUT
        echo "git clone https://github.com/${{ github.repository }}.git" >> $GITHUB_OUTPUT
        echo "cd bmi-calculator" >> $GITHUB_OUTPUT
        echo "pip install -r requirements.txt" >> $GITHUB_OUTPUT
        echo "python main.py" >> $GITHUB_OUTPUT
        echo "\`\`\`" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### ðŸ§ª Tested on:" >> $GITHUB_OUTPUT
        echo "- Python 3.8, 3.9, 3.10, 3.11" >> $GITHUB_OUTPUT
        echo "- Ubuntu, Windows, macOS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body: ${{ steps.generate_notes.outputs.RELEASE_NOTES }}
        files: |
          dist/*
        prerelease: ${{ contains(github.ref, '-') }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to PyPI (optional)
      if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}